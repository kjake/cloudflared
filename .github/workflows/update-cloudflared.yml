name: Stage cloudflared Release

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout customizations branch
        uses: actions/checkout@v4
        with:
          ref: customizations
          fetch-depth: 0

      - name: Get latest upstream release info
        id: get_release
        run: |
          echo 'Fetching latest release tag from cloudflare/cloudflared...'
          release=$(curl -s https://api.github.com/repos/cloudflare/cloudflared/releases/latest)
          tag=$(echo "$release" | jq -r .tag_name)
          title=$(echo "$release" | jq -r .name)
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "title=$title" >> $GITHUB_OUTPUT
          echo "TAG=$tag" >> $GITHUB_ENV
          echo "TITLE=$title" >> $GITHUB_ENV

      - name: Check if already up-to-date
        id: check_version
        run: |
          last=$(git tag --sort=-creatordate | grep -E '^release-' | head -n1 | sed 's/^release-//')
          echo "current=$last" >> $GITHUB_OUTPUT
          if [ "$last" = "${{ env.TAG }}" ]; then
            echo 'up_to_date=true' >> $GITHUB_OUTPUT
          else
            echo 'up_to_date=false' >> $GITHUB_OUTPUT
          fi

      - name: Prepare release branch
        if: steps.check_version.outputs.up_to_date == 'false'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          branch="release-${TAG}"

          # Start from the upstream tag
          git remote add upstream https://github.com/cloudflare/cloudflared.git || true
          git fetch --depth=1 upstream "refs/tags/${TAG}"
          git checkout -b "$branch" "FETCH_HEAD"

          # Merge our customizations on top
          git fetch origin customizations
          git merge --no-commit --no-ff origin/customizations || true   # stop if conflicts

          # Keep our own workflows regardless of what upstream added
          rm -rf .github/workflows
          git checkout origin/customizations -- 

          # Finalise the merge (contains *all* your code + upstream)
          git add -A
          git commit -m "chore: apply customizations on ${TAG}"

          git push --force-with-lease origin "$branch"