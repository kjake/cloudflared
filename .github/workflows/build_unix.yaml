name: Build Native

on:
  release:
    types: [created, published]
  workflow_dispatch:
  workflow_run:
    workflows: ["New cloudflared Release"]
    types: [completed]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: freebsd
            assetName: cloudflared-freebsd14-amd64
          - os: netbsd
            assetName: cloudflared-netbsd10-amd64
          - os: openbsd
            assetName: cloudflared-openbsd7-amd64
    env:
      GOEXPERIMENT: "noboringcrypto"
      CGO_ENABLED: 0
    steps:
      - name: Get latest release tag
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo:  context.repo.repo
            });
            core.setOutput('tag_name', data.tag_name);

      - name: Checkout Release Tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_release.outputs.tag_name }}
          fetch-depth: 0
          fetch-tags: true

      # Build step for FreeBSD
      - name: Build from Source on FreeBSD
        if: matrix.os == 'freebsd'
        uses: vmactions/freebsd-vm@v1
        with:
          release: "14.2"
          envs: "GOEXPERIMENT CGO_ENABLED"
          usesh: true
          mem: 4096
          prepare: |
            pkg install -y gmake sudo bash git go golangci-lint curl wget fakeroot libffi rubygem-fpm
            git config --global --add safe.directory /home/runner/work/cloudflared/cloudflared
          run: |
            gmake install-go
            go mod download
            go mod tidy
            go install golang.org/x/tools/cmd/goimports@latest
            gmake cloudflared cleanup-go

      # Build step for NetBSD
      - name: Build from Source on NetBSD
        if: matrix.os == 'netbsd'
        uses: vmactions/netbsd-vm@v1
        with:
          release: "10.1"
          envs: "GOEXPERIMENT CGO_ENABLED"
          usesh: true
          mem: 4096
          prepare: |
            export PATH=/usr/sbin:$PATH
            export PKG_PATH=ftp://ftp.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/10.1/All
            pkg_add -U pkgin
            pkgin -y install gmake sudo bash git go golangci-lint curl wget fakeroot libffi ruby32 pkg_alternatives
            pkg_alternatives rebuild
            gem install fpm
            git config --global --add safe.directory /home/runner/work/cloudflared/cloudflared
          run: |
            gmake install-go
            go mod download
            go mod tidy
            go install golang.org/x/tools/cmd/goimports@latest
            gmake cloudflared cleanup-go

      # Build step for OpenBSD
      - name: Build from Source on OpenBSD
        if: matrix.os == 'openbsd'
        uses: vmactions/openbsd-vm@v1
        with:
          release: "7.7"
          envs: "GOEXPERIMENT CGO_ENABLED"
          usesh: true
          mem: 4096
          prepare: |
            pkg_add -xaz gmake sudo-- bash git go curl wget libffi ruby-34
            gem34 install fpm
            git config --global --add safe.directory /home/runner/work/cloudflared/cloudflared
          run: |
            gmake install-go
            go mod download
            go mod tidy
            go install golang.org/x/tools/cmd/goimports@latest
            gmake cloudflared cleanup-go

      - name: Authenticate GH CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Upload build to GitHub Release
        run: |
          gh release upload "${{ steps.get_release.outputs.tag_name }}" \
            cloudflared \
            --clobber \
            --name "${{ matrix.assetName }}"" \
            --content-type application/octet-stream